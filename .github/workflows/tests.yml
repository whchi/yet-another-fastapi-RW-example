name: Test app

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      psql:
        image: postgres:15
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: root
          POSTGRES_PASSWORD:
          POSTGRES_DB: postgres_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      #----------------------------------------------
      #       init sql
      #----------------------------------------------
      - name: Run init.sql
        run: psql -f ./.docker/postgres/init.sql postgresql://root:@localhost:5432/postgres_test

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #      add hosts to /etc/hosts
      #----------------------------------------------
      - name: Add hosts to /etc/hosts
        run: |
            sudo echo "127.0.0.1 pgsql" | sudo tee -a /etc/hosts
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run sync tests
        run: |
          source .venv/bin/activate
          poetry run pytest --tb=line -k "not async" tests/
      - name: Run async tests
        run: |
          poetry run pytest --tb=line tests/async/
